// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class eveSales extends ethereum.Event {
  get params(): eveSales__Params {
    return new eveSales__Params(this);
  }
}

export class eveSales__Params {
  _event: eveSales;

  constructor(event: eveSales) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get finalPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tipsFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class eveNewSales extends ethereum.Event {
  get params(): eveNewSales__Params {
    return new eveNewSales__Params(this);
  }
}

export class eveNewSales__Params {
  _event: eveNewSales;

  constructor(event: eveNewSales) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nft(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get durationTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get maxPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get finalPrice(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class eveCancelSales extends ethereum.Event {
  get params(): eveCancelSales__Params {
    return new eveCancelSales__Params(this);
  }
}

export class eveCancelSales__Params {
  _event: eveCancelSales;

  constructor(event: eveCancelSales) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class eveNFTReceived extends ethereum.Event {
  get params(): eveNFTReceived__Params {
    return new eveNFTReceived__Params(this);
  }
}

export class eveNFTReceived__Params {
  _event: eveNFTReceived;

  constructor(event: eveNFTReceived) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class GovernanceTransferred extends ethereum.Event {
  get params(): GovernanceTransferred__Params {
    return new GovernanceTransferred__Params(this);
  }
}

export class GovernanceTransferred__Params {
  _event: GovernanceTransferred;

  constructor(event: GovernanceTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NFTMarket__getSalesResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get seller(): Address {
    return this[2].toAddress();
  }

  get nft(): Address {
    return this[3].toAddress();
  }

  get buyer(): Address {
    return this[4].toAddress();
  }

  get startTime(): BigInt {
    return this[5].toBigInt();
  }

  get durationTime(): BigInt {
    return this[6].toBigInt();
  }

  get maxPrice(): BigInt {
    return this[7].toBigInt();
  }

  get minPrice(): BigInt {
    return this[8].toBigInt();
  }

  get finalPrice(): BigInt {
    return this[9].toBigInt();
  }

  get status(): i32 {
    return this[10].toI32();
  }
}

export class NFTMarket extends ethereum.SmartContract {
  static bind(address: Address): NFTMarket {
    return new NFTMarket("NFTMarket", address);
  }

  onERC721Received(
    operator: Address,
    from: Address,
    tokenId: BigInt,
    data: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    operator: Address,
    from: Address,
    tokenId: BigInt,
    data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  seize(asset: Address): BigInt {
    let result = super.call("seize", "seize(address):(uint256)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toBigInt();
  }

  try_seize(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("seize", "seize(address):(uint256)", [
      ethereum.Value.fromAddress(asset)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  startSales(
    tokenId: BigInt,
    maxPrice: BigInt,
    minPrice: BigInt,
    startTime: BigInt,
    durationTime: BigInt,
    nft: Address
  ): BigInt {
    let result = super.call(
      "startSales",
      "startSales(uint256,uint256,uint256,uint256,uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(maxPrice),
        ethereum.Value.fromUnsignedBigInt(minPrice),
        ethereum.Value.fromUnsignedBigInt(startTime),
        ethereum.Value.fromUnsignedBigInt(durationTime),
        ethereum.Value.fromAddress(nft)
      ]
    );

    return result[0].toBigInt();
  }

  try_startSales(
    tokenId: BigInt,
    maxPrice: BigInt,
    minPrice: BigInt,
    startTime: BigInt,
    durationTime: BigInt,
    nft: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startSales",
      "startSales(uint256,uint256,uint256,uint256,uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(maxPrice),
        ethereum.Value.fromUnsignedBigInt(minPrice),
        ethereum.Value.fromUnsignedBigInt(startTime),
        ethereum.Value.fromUnsignedBigInt(durationTime),
        ethereum.Value.fromAddress(nft)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _baseRate(): BigInt {
    let result = super.call("_baseRate", "_baseRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try__baseRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_baseRate", "_baseRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _buyerRewardDandy(): BigInt {
    let result = super.call(
      "_buyerRewardDandy",
      "_buyerRewardDandy():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__buyerRewardDandy(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_buyerRewardDandy",
      "_buyerRewardDandy():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _dandy(): Address {
    let result = super.call("_dandy", "_dandy():(address)", []);

    return result[0].toAddress();
  }

  try__dandy(): ethereum.CallResult<Address> {
    let result = super.tryCall("_dandy", "_dandy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _governance(): Address {
    let result = super.call("_governance", "_governance():(address)", []);

    return result[0].toAddress();
  }

  try__governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("_governance", "_governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _isRewardBuyerDandy(): boolean {
    let result = super.call(
      "_isRewardBuyerDandy",
      "_isRewardBuyerDandy():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try__isRewardBuyerDandy(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_isRewardBuyerDandy",
      "_isRewardBuyerDandy():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _isRewardSellerDandy(): boolean {
    let result = super.call(
      "_isRewardSellerDandy",
      "_isRewardSellerDandy():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try__isRewardSellerDandy(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_isRewardSellerDandy",
      "_isRewardSellerDandy():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _isStartUserSales(): boolean {
    let result = super.call(
      "_isStartUserSales",
      "_isStartUserSales():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try__isStartUserSales(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_isStartUserSales",
      "_isStartUserSales():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _minDurationTime(): BigInt {
    let result = super.call(
      "_minDurationTime",
      "_minDurationTime():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__minDurationTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_minDurationTime",
      "_minDurationTime():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _salesAmount(): BigInt {
    let result = super.call("_salesAmount", "_salesAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try__salesAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_salesAmount", "_salesAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _seller(param0: Address): boolean {
    let result = super.call("_seller", "_seller(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try__seller(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("_seller", "_seller(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _sellerRewardDandy(): BigInt {
    let result = super.call(
      "_sellerRewardDandy",
      "_sellerRewardDandy():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__sellerRewardDandy(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_sellerRewardDandy",
      "_sellerRewardDandy():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _supportNft(param0: Address): boolean {
    let result = super.call("_supportNft", "_supportNft(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try__supportNft(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("_supportNft", "_supportNft(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _tipsFeeRate(): BigInt {
    let result = super.call("_tipsFeeRate", "_tipsFeeRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try__tipsFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_tipsFeeRate", "_tipsFeeRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _verifySeller(param0: Address): boolean {
    let result = super.call("_verifySeller", "_verifySeller(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try__verifySeller(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_verifySeller",
      "_verifySeller(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getSales(index: BigInt): NFTMarket__getSalesResultValue0Struct {
    let result = super.call(
      "getSales",
      "getSales(uint256):((uint256,uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint8))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toTuple() as NFTMarket__getSalesResultValue0Struct;
  }

  try_getSales(
    index: BigInt
  ): ethereum.CallResult<NFTMarket__getSalesResultValue0Struct> {
    let result = super.tryCall(
      "getSales",
      "getSales(uint256):((uint256,uint256,address,address,address,uint256,uint256,uint256,uint256,uint256,uint8))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as NFTMarket__getSalesResultValue0Struct
    );
  }

  getSalesEndTime(index: BigInt): BigInt {
    let result = super.call(
      "getSalesEndTime",
      "getSalesEndTime(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toBigInt();
  }

  try_getSalesEndTime(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSalesEndTime",
      "getSalesEndTime(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSalesPrice(index: BigInt): BigInt {
    let result = super.call(
      "getSalesPrice",
      "getSalesPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toBigInt();
  }

  try_getSalesPrice(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSalesPrice",
      "getSalesPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSalesStatus(index: BigInt, step: BigInt): Array<i32> {
    let result = super.call(
      "getSalesStatus",
      "getSalesStatus(uint256,uint256):(uint8[])",
      [
        ethereum.Value.fromUnsignedBigInt(index),
        ethereum.Value.fromUnsignedBigInt(step)
      ]
    );

    return result[0].toI32Array();
  }

  try_getSalesStatus(
    index: BigInt,
    step: BigInt
  ): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getSalesStatus",
      "getSalesStatus(uint256,uint256):(uint8[])",
      [
        ethereum.Value.fromUnsignedBigInt(index),
        ethereum.Value.fromUnsignedBigInt(step)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  isVerifySeller(index: BigInt): boolean {
    let result = super.call(
      "isVerifySeller",
      "isVerifySeller(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toBoolean();
  }

  try_isVerifySeller(index: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isVerifySeller",
      "isVerifySeller(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddSellerCall extends ethereum.Call {
  get inputs(): AddSellerCall__Inputs {
    return new AddSellerCall__Inputs(this);
  }

  get outputs(): AddSellerCall__Outputs {
    return new AddSellerCall__Outputs(this);
  }
}

export class AddSellerCall__Inputs {
  _call: AddSellerCall;

  constructor(call: AddSellerCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddSellerCall__Outputs {
  _call: AddSellerCall;

  constructor(call: AddSellerCall) {
    this._call = call;
  }
}

export class AddSupportNftCall extends ethereum.Call {
  get inputs(): AddSupportNftCall__Inputs {
    return new AddSupportNftCall__Inputs(this);
  }

  get outputs(): AddSupportNftCall__Outputs {
    return new AddSupportNftCall__Outputs(this);
  }
}

export class AddSupportNftCall__Inputs {
  _call: AddSupportNftCall;

  constructor(call: AddSupportNftCall) {
    this._call = call;
  }

  get nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddSupportNftCall__Outputs {
  _call: AddSupportNftCall;

  constructor(call: AddSupportNftCall) {
    this._call = call;
  }
}

export class AddVerifySellerCall extends ethereum.Call {
  get inputs(): AddVerifySellerCall__Inputs {
    return new AddVerifySellerCall__Inputs(this);
  }

  get outputs(): AddVerifySellerCall__Outputs {
    return new AddVerifySellerCall__Outputs(this);
  }
}

export class AddVerifySellerCall__Inputs {
  _call: AddVerifySellerCall;

  constructor(call: AddVerifySellerCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddVerifySellerCall__Outputs {
  _call: AddVerifySellerCall;

  constructor(call: AddVerifySellerCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class CancelSalesCall extends ethereum.Call {
  get inputs(): CancelSalesCall__Inputs {
    return new CancelSalesCall__Inputs(this);
  }

  get outputs(): CancelSalesCall__Outputs {
    return new CancelSalesCall__Outputs(this);
  }
}

export class CancelSalesCall__Inputs {
  _call: CancelSalesCall;

  constructor(call: CancelSalesCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelSalesCall__Outputs {
  _call: CancelSalesCall;

  constructor(call: CancelSalesCall) {
    this._call = call;
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RemoveSellerCall extends ethereum.Call {
  get inputs(): RemoveSellerCall__Inputs {
    return new RemoveSellerCall__Inputs(this);
  }

  get outputs(): RemoveSellerCall__Outputs {
    return new RemoveSellerCall__Outputs(this);
  }
}

export class RemoveSellerCall__Inputs {
  _call: RemoveSellerCall;

  constructor(call: RemoveSellerCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveSellerCall__Outputs {
  _call: RemoveSellerCall;

  constructor(call: RemoveSellerCall) {
    this._call = call;
  }
}

export class RemoveSupportNftCall extends ethereum.Call {
  get inputs(): RemoveSupportNftCall__Inputs {
    return new RemoveSupportNftCall__Inputs(this);
  }

  get outputs(): RemoveSupportNftCall__Outputs {
    return new RemoveSupportNftCall__Outputs(this);
  }
}

export class RemoveSupportNftCall__Inputs {
  _call: RemoveSupportNftCall;

  constructor(call: RemoveSupportNftCall) {
    this._call = call;
  }

  get nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveSupportNftCall__Outputs {
  _call: RemoveSupportNftCall;

  constructor(call: RemoveSupportNftCall) {
    this._call = call;
  }
}

export class RemoveVerifySellerCall extends ethereum.Call {
  get inputs(): RemoveVerifySellerCall__Inputs {
    return new RemoveVerifySellerCall__Inputs(this);
  }

  get outputs(): RemoveVerifySellerCall__Outputs {
    return new RemoveVerifySellerCall__Outputs(this);
  }
}

export class RemoveVerifySellerCall__Inputs {
  _call: RemoveVerifySellerCall;

  constructor(call: RemoveVerifySellerCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveVerifySellerCall__Outputs {
  _call: RemoveVerifySellerCall;

  constructor(call: RemoveVerifySellerCall) {
    this._call = call;
  }
}

export class SeizeCall extends ethereum.Call {
  get inputs(): SeizeCall__Inputs {
    return new SeizeCall__Inputs(this);
  }

  get outputs(): SeizeCall__Outputs {
    return new SeizeCall__Outputs(this);
  }
}

export class SeizeCall__Inputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SeizeCall__Outputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }

  get balance(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetBaseRateCall extends ethereum.Call {
  get inputs(): SetBaseRateCall__Inputs {
    return new SetBaseRateCall__Inputs(this);
  }

  get outputs(): SetBaseRateCall__Outputs {
    return new SetBaseRateCall__Outputs(this);
  }
}

export class SetBaseRateCall__Inputs {
  _call: SetBaseRateCall;

  constructor(call: SetBaseRateCall) {
    this._call = call;
  }

  get rate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBaseRateCall__Outputs {
  _call: SetBaseRateCall;

  constructor(call: SetBaseRateCall) {
    this._call = call;
  }
}

export class SetBuyerRewardDandyCall extends ethereum.Call {
  get inputs(): SetBuyerRewardDandyCall__Inputs {
    return new SetBuyerRewardDandyCall__Inputs(this);
  }

  get outputs(): SetBuyerRewardDandyCall__Outputs {
    return new SetBuyerRewardDandyCall__Outputs(this);
  }
}

export class SetBuyerRewardDandyCall__Inputs {
  _call: SetBuyerRewardDandyCall;

  constructor(call: SetBuyerRewardDandyCall) {
    this._call = call;
  }

  get rewardDandy(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBuyerRewardDandyCall__Outputs {
  _call: SetBuyerRewardDandyCall;

  constructor(call: SetBuyerRewardDandyCall) {
    this._call = call;
  }
}

export class SetDandyAddressCall extends ethereum.Call {
  get inputs(): SetDandyAddressCall__Inputs {
    return new SetDandyAddressCall__Inputs(this);
  }

  get outputs(): SetDandyAddressCall__Outputs {
    return new SetDandyAddressCall__Outputs(this);
  }
}

export class SetDandyAddressCall__Inputs {
  _call: SetDandyAddressCall;

  constructor(call: SetDandyAddressCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDandyAddressCall__Outputs {
  _call: SetDandyAddressCall;

  constructor(call: SetDandyAddressCall) {
    this._call = call;
  }
}

export class SetGovernanceCall extends ethereum.Call {
  get inputs(): SetGovernanceCall__Inputs {
    return new SetGovernanceCall__Inputs(this);
  }

  get outputs(): SetGovernanceCall__Outputs {
    return new SetGovernanceCall__Outputs(this);
  }
}

export class SetGovernanceCall__Inputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }

  get governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceCall__Outputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }
}

export class SetIsRewardBuyerDandyCall extends ethereum.Call {
  get inputs(): SetIsRewardBuyerDandyCall__Inputs {
    return new SetIsRewardBuyerDandyCall__Inputs(this);
  }

  get outputs(): SetIsRewardBuyerDandyCall__Outputs {
    return new SetIsRewardBuyerDandyCall__Outputs(this);
  }
}

export class SetIsRewardBuyerDandyCall__Inputs {
  _call: SetIsRewardBuyerDandyCall;

  constructor(call: SetIsRewardBuyerDandyCall) {
    this._call = call;
  }

  get isRewardBuyerDandy(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetIsRewardBuyerDandyCall__Outputs {
  _call: SetIsRewardBuyerDandyCall;

  constructor(call: SetIsRewardBuyerDandyCall) {
    this._call = call;
  }
}

export class SetIsRewardSellerDandyCall extends ethereum.Call {
  get inputs(): SetIsRewardSellerDandyCall__Inputs {
    return new SetIsRewardSellerDandyCall__Inputs(this);
  }

  get outputs(): SetIsRewardSellerDandyCall__Outputs {
    return new SetIsRewardSellerDandyCall__Outputs(this);
  }
}

export class SetIsRewardSellerDandyCall__Inputs {
  _call: SetIsRewardSellerDandyCall;

  constructor(call: SetIsRewardSellerDandyCall) {
    this._call = call;
  }

  get isRewardSellerDandy(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetIsRewardSellerDandyCall__Outputs {
  _call: SetIsRewardSellerDandyCall;

  constructor(call: SetIsRewardSellerDandyCall) {
    this._call = call;
  }
}

export class SetIsStartUserSalesCall extends ethereum.Call {
  get inputs(): SetIsStartUserSalesCall__Inputs {
    return new SetIsStartUserSalesCall__Inputs(this);
  }

  get outputs(): SetIsStartUserSalesCall__Outputs {
    return new SetIsStartUserSalesCall__Outputs(this);
  }
}

export class SetIsStartUserSalesCall__Inputs {
  _call: SetIsStartUserSalesCall;

  constructor(call: SetIsStartUserSalesCall) {
    this._call = call;
  }

  get isStartUserSales(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetIsStartUserSalesCall__Outputs {
  _call: SetIsStartUserSalesCall;

  constructor(call: SetIsStartUserSalesCall) {
    this._call = call;
  }
}

export class SetMinDurationTimeCall extends ethereum.Call {
  get inputs(): SetMinDurationTimeCall__Inputs {
    return new SetMinDurationTimeCall__Inputs(this);
  }

  get outputs(): SetMinDurationTimeCall__Outputs {
    return new SetMinDurationTimeCall__Outputs(this);
  }
}

export class SetMinDurationTimeCall__Inputs {
  _call: SetMinDurationTimeCall;

  constructor(call: SetMinDurationTimeCall) {
    this._call = call;
  }

  get durationTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinDurationTimeCall__Outputs {
  _call: SetMinDurationTimeCall;

  constructor(call: SetMinDurationTimeCall) {
    this._call = call;
  }
}

export class SetSellerRewardDandyCall extends ethereum.Call {
  get inputs(): SetSellerRewardDandyCall__Inputs {
    return new SetSellerRewardDandyCall__Inputs(this);
  }

  get outputs(): SetSellerRewardDandyCall__Outputs {
    return new SetSellerRewardDandyCall__Outputs(this);
  }
}

export class SetSellerRewardDandyCall__Inputs {
  _call: SetSellerRewardDandyCall;

  constructor(call: SetSellerRewardDandyCall) {
    this._call = call;
  }

  get rewardDandy(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSellerRewardDandyCall__Outputs {
  _call: SetSellerRewardDandyCall;

  constructor(call: SetSellerRewardDandyCall) {
    this._call = call;
  }
}

export class SetTipsFeeRateCall extends ethereum.Call {
  get inputs(): SetTipsFeeRateCall__Inputs {
    return new SetTipsFeeRateCall__Inputs(this);
  }

  get outputs(): SetTipsFeeRateCall__Outputs {
    return new SetTipsFeeRateCall__Outputs(this);
  }
}

export class SetTipsFeeRateCall__Inputs {
  _call: SetTipsFeeRateCall;

  constructor(call: SetTipsFeeRateCall) {
    this._call = call;
  }

  get rate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTipsFeeRateCall__Outputs {
  _call: SetTipsFeeRateCall;

  constructor(call: SetTipsFeeRateCall) {
    this._call = call;
  }
}

export class SetTipsFeeWalletCall extends ethereum.Call {
  get inputs(): SetTipsFeeWalletCall__Inputs {
    return new SetTipsFeeWalletCall__Inputs(this);
  }

  get outputs(): SetTipsFeeWalletCall__Outputs {
    return new SetTipsFeeWalletCall__Outputs(this);
  }
}

export class SetTipsFeeWalletCall__Inputs {
  _call: SetTipsFeeWalletCall;

  constructor(call: SetTipsFeeWalletCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTipsFeeWalletCall__Outputs {
  _call: SetTipsFeeWalletCall;

  constructor(call: SetTipsFeeWalletCall) {
    this._call = call;
  }
}

export class StartSalesCall extends ethereum.Call {
  get inputs(): StartSalesCall__Inputs {
    return new StartSalesCall__Inputs(this);
  }

  get outputs(): StartSalesCall__Outputs {
    return new StartSalesCall__Outputs(this);
  }
}

export class StartSalesCall__Inputs {
  _call: StartSalesCall;

  constructor(call: StartSalesCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get durationTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get nft(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class StartSalesCall__Outputs {
  _call: StartSalesCall;

  constructor(call: StartSalesCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
