// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GovernanceTransferred extends ethereum.Event {
  get params(): GovernanceTransferred__Params {
    return new GovernanceTransferred__Params(this);
  }
}

export class GovernanceTransferred__Params {
  _event: GovernanceTransferred;

  constructor(event: GovernanceTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class eveCancelSales extends ethereum.Event {
  get params(): eveCancelSales__Params {
    return new eveCancelSales__Params(this);
  }
}

export class eveCancelSales__Params {
  _event: eveCancelSales;

  constructor(event: eveCancelSales) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class eveNFTReceived extends ethereum.Event {
  get params(): eveNFTReceived__Params {
    return new eveNFTReceived__Params(this);
  }
}

export class eveNFTReceived__Params {
  _event: eveNFTReceived;

  constructor(event: eveNFTReceived) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class eveNewSales extends ethereum.Event {
  get params(): eveNewSales__Params {
    return new eveNewSales__Params(this);
  }
}

export class eveNewSales__Params {
  _event: eveNewSales;

  constructor(event: eveNewSales) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nft(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get unitPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class eveSales extends ethereum.Event {
  get params(): eveSales__Params {
    return new eveSales__Params(this);
  }
}

export class eveSales__Params {
  _event: eveSales;

  constructor(event: eveSales) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tipsFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get sellAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get surplusAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class eveSupportCurrency extends ethereum.Event {
  get params(): eveSupportCurrency__Params {
    return new eveSupportCurrency__Params(this);
  }
}

export class eveSupportCurrency__Params {
  _event: eveSupportCurrency;

  constructor(event: eveSupportCurrency) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get support(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class eveSupportNft extends ethereum.Event {
  get params(): eveSupportNft__Params {
    return new eveSupportNft__Params(this);
  }
}

export class eveSupportNft__Params {
  _event: eveSupportNft;

  constructor(event: eveSupportNft) {
    this._event = event;
  }

  get nft(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get support(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class NFT1155Market__getSalesResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get unitPrice(): BigInt {
    return this[2].toBigInt();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get seller(): Address {
    return this[4].toAddress();
  }

  get nft(): Address {
    return this[5].toAddress();
  }

  get amount(): BigInt {
    return this[6].toBigInt();
  }

  get initAmount(): BigInt {
    return this[7].toBigInt();
  }

  get currency(): Address {
    return this[8].toAddress();
  }

  get buyers(): Array<Address> {
    return this[9].toAddressArray();
  }
}

export class NFT1155Market extends ethereum.SmartContract {
  static bind(address: Address): NFT1155Market {
    return new NFT1155Market("NFT1155Market", address);
  }

  _baseRate(): BigInt {
    let result = super.call("_baseRate", "_baseRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try__baseRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_baseRate", "_baseRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _buyerRewardDandy(): BigInt {
    let result = super.call(
      "_buyerRewardDandy",
      "_buyerRewardDandy():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__buyerRewardDandy(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_buyerRewardDandy",
      "_buyerRewardDandy():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _dandy(): Address {
    let result = super.call("_dandy", "_dandy():(address)", []);

    return result[0].toAddress();
  }

  try__dandy(): ethereum.CallResult<Address> {
    let result = super.tryCall("_dandy", "_dandy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _governance(): Address {
    let result = super.call("_governance", "_governance():(address)", []);

    return result[0].toAddress();
  }

  try__governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("_governance", "_governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _isRewardBuyerDandy(): boolean {
    let result = super.call(
      "_isRewardBuyerDandy",
      "_isRewardBuyerDandy():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try__isRewardBuyerDandy(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_isRewardBuyerDandy",
      "_isRewardBuyerDandy():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _isRewardSellerDandy(): boolean {
    let result = super.call(
      "_isRewardSellerDandy",
      "_isRewardSellerDandy():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try__isRewardSellerDandy(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_isRewardSellerDandy",
      "_isRewardSellerDandy():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _salesAmount(): BigInt {
    let result = super.call("_salesAmount", "_salesAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try__salesAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_salesAmount", "_salesAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _sellerRewardDandy(): BigInt {
    let result = super.call(
      "_sellerRewardDandy",
      "_sellerRewardDandy():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__sellerRewardDandy(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_sellerRewardDandy",
      "_sellerRewardDandy():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _supportCurrency(param0: Address): boolean {
    let result = super.call(
      "_supportCurrency",
      "_supportCurrency(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try__supportCurrency(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_supportCurrency",
      "_supportCurrency(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _supportNft(param0: Address): boolean {
    let result = super.call("_supportNft", "_supportNft(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try__supportNft(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("_supportNft", "_supportNft(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _tipsFeeRate(): BigInt {
    let result = super.call("_tipsFeeRate", "_tipsFeeRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try__tipsFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_tipsFeeRate", "_tipsFeeRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSales(index: BigInt): NFT1155Market__getSalesResultValue0Struct {
    let result = super.call(
      "getSales",
      "getSales(uint256):((uint256,uint256,uint256,uint8,address,address,uint256,uint256,address,address[]))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toTuple() as NFT1155Market__getSalesResultValue0Struct;
  }

  try_getSales(
    index: BigInt
  ): ethereum.CallResult<NFT1155Market__getSalesResultValue0Struct> {
    let result = super.tryCall(
      "getSales",
      "getSales(uint256):((uint256,uint256,uint256,uint8,address,address,uint256,uint256,address,address[]))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as NFT1155Market__getSalesResultValue0Struct
    );
  }

  getSalesBuyers(index: BigInt): Array<Address> {
    let result = super.call(
      "getSalesBuyers",
      "getSalesBuyers(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toAddressArray();
  }

  try_getSalesBuyers(index: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getSalesBuyers",
      "getSalesBuyers(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getSalesPrice(index: BigInt): BigInt {
    let result = super.call(
      "getSalesPrice",
      "getSalesPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toBigInt();
  }

  try_getSalesPrice(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSalesPrice",
      "getSalesPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC1155Received(
    operator: Address,
    from: Address,
    tokenId: BigInt,
    value: BigInt,
    data: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    operator: Address,
    from: Address,
    tokenId: BigInt,
    value: BigInt,
    data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  seize(asset: Address): BigInt {
    let result = super.call("seize", "seize(address):(uint256)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toBigInt();
  }

  try_seize(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("seize", "seize(address):(uint256)", [
      ethereum.Value.fromAddress(asset)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  startSales(
    _tokenId: BigInt,
    _unitPrice: BigInt,
    _nft: Address,
    _amount: BigInt,
    _currency: Address
  ): BigInt {
    let result = super.call(
      "startSales",
      "startSales(uint256,uint256,address,uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_unitPrice),
        ethereum.Value.fromAddress(_nft),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_currency)
      ]
    );

    return result[0].toBigInt();
  }

  try_startSales(
    _tokenId: BigInt,
    _unitPrice: BigInt,
    _nft: Address,
    _amount: BigInt,
    _currency: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startSales",
      "startSales(uint256,uint256,address,uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_unitPrice),
        ethereum.Value.fromAddress(_nft),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_currency)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddSupportCurrencyCall extends ethereum.Call {
  get inputs(): AddSupportCurrencyCall__Inputs {
    return new AddSupportCurrencyCall__Inputs(this);
  }

  get outputs(): AddSupportCurrencyCall__Outputs {
    return new AddSupportCurrencyCall__Outputs(this);
  }
}

export class AddSupportCurrencyCall__Inputs {
  _call: AddSupportCurrencyCall;

  constructor(call: AddSupportCurrencyCall) {
    this._call = call;
  }

  get erc20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddSupportCurrencyCall__Outputs {
  _call: AddSupportCurrencyCall;

  constructor(call: AddSupportCurrencyCall) {
    this._call = call;
  }
}

export class AddSupportNftCall extends ethereum.Call {
  get inputs(): AddSupportNftCall__Inputs {
    return new AddSupportNftCall__Inputs(this);
  }

  get outputs(): AddSupportNftCall__Outputs {
    return new AddSupportNftCall__Outputs(this);
  }
}

export class AddSupportNftCall__Inputs {
  _call: AddSupportNftCall;

  constructor(call: AddSupportNftCall) {
    this._call = call;
  }

  get nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddSupportNftCall__Outputs {
  _call: AddSupportNftCall;

  constructor(call: AddSupportNftCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class CancelSalesCall extends ethereum.Call {
  get inputs(): CancelSalesCall__Inputs {
    return new CancelSalesCall__Inputs(this);
  }

  get outputs(): CancelSalesCall__Outputs {
    return new CancelSalesCall__Outputs(this);
  }
}

export class CancelSalesCall__Inputs {
  _call: CancelSalesCall;

  constructor(call: CancelSalesCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelSalesCall__Outputs {
  _call: CancelSalesCall;

  constructor(call: CancelSalesCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get tipsFeeWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get minDurationTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get tipsFeeRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get baseRate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get dandy(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RemoveSupportCurrencyCall extends ethereum.Call {
  get inputs(): RemoveSupportCurrencyCall__Inputs {
    return new RemoveSupportCurrencyCall__Inputs(this);
  }

  get outputs(): RemoveSupportCurrencyCall__Outputs {
    return new RemoveSupportCurrencyCall__Outputs(this);
  }
}

export class RemoveSupportCurrencyCall__Inputs {
  _call: RemoveSupportCurrencyCall;

  constructor(call: RemoveSupportCurrencyCall) {
    this._call = call;
  }

  get erc20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveSupportCurrencyCall__Outputs {
  _call: RemoveSupportCurrencyCall;

  constructor(call: RemoveSupportCurrencyCall) {
    this._call = call;
  }
}

export class RemoveSupportNftCall extends ethereum.Call {
  get inputs(): RemoveSupportNftCall__Inputs {
    return new RemoveSupportNftCall__Inputs(this);
  }

  get outputs(): RemoveSupportNftCall__Outputs {
    return new RemoveSupportNftCall__Outputs(this);
  }
}

export class RemoveSupportNftCall__Inputs {
  _call: RemoveSupportNftCall;

  constructor(call: RemoveSupportNftCall) {
    this._call = call;
  }

  get nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveSupportNftCall__Outputs {
  _call: RemoveSupportNftCall;

  constructor(call: RemoveSupportNftCall) {
    this._call = call;
  }
}

export class SeizeCall extends ethereum.Call {
  get inputs(): SeizeCall__Inputs {
    return new SeizeCall__Inputs(this);
  }

  get outputs(): SeizeCall__Outputs {
    return new SeizeCall__Outputs(this);
  }
}

export class SeizeCall__Inputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SeizeCall__Outputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }

  get balance(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetBaseRateCall extends ethereum.Call {
  get inputs(): SetBaseRateCall__Inputs {
    return new SetBaseRateCall__Inputs(this);
  }

  get outputs(): SetBaseRateCall__Outputs {
    return new SetBaseRateCall__Outputs(this);
  }
}

export class SetBaseRateCall__Inputs {
  _call: SetBaseRateCall;

  constructor(call: SetBaseRateCall) {
    this._call = call;
  }

  get rate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBaseRateCall__Outputs {
  _call: SetBaseRateCall;

  constructor(call: SetBaseRateCall) {
    this._call = call;
  }
}

export class SetBuyerRewardDandyCall extends ethereum.Call {
  get inputs(): SetBuyerRewardDandyCall__Inputs {
    return new SetBuyerRewardDandyCall__Inputs(this);
  }

  get outputs(): SetBuyerRewardDandyCall__Outputs {
    return new SetBuyerRewardDandyCall__Outputs(this);
  }
}

export class SetBuyerRewardDandyCall__Inputs {
  _call: SetBuyerRewardDandyCall;

  constructor(call: SetBuyerRewardDandyCall) {
    this._call = call;
  }

  get rewardDandy(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBuyerRewardDandyCall__Outputs {
  _call: SetBuyerRewardDandyCall;

  constructor(call: SetBuyerRewardDandyCall) {
    this._call = call;
  }
}

export class SetDandyAddressCall extends ethereum.Call {
  get inputs(): SetDandyAddressCall__Inputs {
    return new SetDandyAddressCall__Inputs(this);
  }

  get outputs(): SetDandyAddressCall__Outputs {
    return new SetDandyAddressCall__Outputs(this);
  }
}

export class SetDandyAddressCall__Inputs {
  _call: SetDandyAddressCall;

  constructor(call: SetDandyAddressCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDandyAddressCall__Outputs {
  _call: SetDandyAddressCall;

  constructor(call: SetDandyAddressCall) {
    this._call = call;
  }
}

export class SetGovernanceCall extends ethereum.Call {
  get inputs(): SetGovernanceCall__Inputs {
    return new SetGovernanceCall__Inputs(this);
  }

  get outputs(): SetGovernanceCall__Outputs {
    return new SetGovernanceCall__Outputs(this);
  }
}

export class SetGovernanceCall__Inputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }

  get governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceCall__Outputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }
}

export class SetIsRewardBuyerDandyCall extends ethereum.Call {
  get inputs(): SetIsRewardBuyerDandyCall__Inputs {
    return new SetIsRewardBuyerDandyCall__Inputs(this);
  }

  get outputs(): SetIsRewardBuyerDandyCall__Outputs {
    return new SetIsRewardBuyerDandyCall__Outputs(this);
  }
}

export class SetIsRewardBuyerDandyCall__Inputs {
  _call: SetIsRewardBuyerDandyCall;

  constructor(call: SetIsRewardBuyerDandyCall) {
    this._call = call;
  }

  get isRewardBuyerDandy(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetIsRewardBuyerDandyCall__Outputs {
  _call: SetIsRewardBuyerDandyCall;

  constructor(call: SetIsRewardBuyerDandyCall) {
    this._call = call;
  }
}

export class SetIsRewardSellerDandyCall extends ethereum.Call {
  get inputs(): SetIsRewardSellerDandyCall__Inputs {
    return new SetIsRewardSellerDandyCall__Inputs(this);
  }

  get outputs(): SetIsRewardSellerDandyCall__Outputs {
    return new SetIsRewardSellerDandyCall__Outputs(this);
  }
}

export class SetIsRewardSellerDandyCall__Inputs {
  _call: SetIsRewardSellerDandyCall;

  constructor(call: SetIsRewardSellerDandyCall) {
    this._call = call;
  }

  get isRewardSellerDandy(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetIsRewardSellerDandyCall__Outputs {
  _call: SetIsRewardSellerDandyCall;

  constructor(call: SetIsRewardSellerDandyCall) {
    this._call = call;
  }
}

export class SetSellerRewardDandyCall extends ethereum.Call {
  get inputs(): SetSellerRewardDandyCall__Inputs {
    return new SetSellerRewardDandyCall__Inputs(this);
  }

  get outputs(): SetSellerRewardDandyCall__Outputs {
    return new SetSellerRewardDandyCall__Outputs(this);
  }
}

export class SetSellerRewardDandyCall__Inputs {
  _call: SetSellerRewardDandyCall;

  constructor(call: SetSellerRewardDandyCall) {
    this._call = call;
  }

  get rewardDandy(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSellerRewardDandyCall__Outputs {
  _call: SetSellerRewardDandyCall;

  constructor(call: SetSellerRewardDandyCall) {
    this._call = call;
  }
}

export class SetTipsFeeRateCall extends ethereum.Call {
  get inputs(): SetTipsFeeRateCall__Inputs {
    return new SetTipsFeeRateCall__Inputs(this);
  }

  get outputs(): SetTipsFeeRateCall__Outputs {
    return new SetTipsFeeRateCall__Outputs(this);
  }
}

export class SetTipsFeeRateCall__Inputs {
  _call: SetTipsFeeRateCall;

  constructor(call: SetTipsFeeRateCall) {
    this._call = call;
  }

  get rate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTipsFeeRateCall__Outputs {
  _call: SetTipsFeeRateCall;

  constructor(call: SetTipsFeeRateCall) {
    this._call = call;
  }
}

export class SetTipsFeeWalletCall extends ethereum.Call {
  get inputs(): SetTipsFeeWalletCall__Inputs {
    return new SetTipsFeeWalletCall__Inputs(this);
  }

  get outputs(): SetTipsFeeWalletCall__Outputs {
    return new SetTipsFeeWalletCall__Outputs(this);
  }
}

export class SetTipsFeeWalletCall__Inputs {
  _call: SetTipsFeeWalletCall;

  constructor(call: SetTipsFeeWalletCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTipsFeeWalletCall__Outputs {
  _call: SetTipsFeeWalletCall;

  constructor(call: SetTipsFeeWalletCall) {
    this._call = call;
  }
}

export class StartSalesCall extends ethereum.Call {
  get inputs(): StartSalesCall__Inputs {
    return new StartSalesCall__Inputs(this);
  }

  get outputs(): StartSalesCall__Outputs {
    return new StartSalesCall__Outputs(this);
  }
}

export class StartSalesCall__Inputs {
  _call: StartSalesCall;

  constructor(call: StartSalesCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _unitPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _nft(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _currency(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class StartSalesCall__Outputs {
  _call: StartSalesCall;

  constructor(call: StartSalesCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
